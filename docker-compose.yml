services:
  server:
    build:
      context: ./app
    container_name: server_container
    ports:
      - ${SRV_PORT}:${SRV_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    environment:
      APP_ENV: ${APP_ENV}  
      SRV_PROTOCOL: ${SRV_PROTOCOL}
      SRV_IP: ${SRV_IP} 
      SRV_PORT: ${SRV_PORT} 
      SRV_LISTEN_ADDR: ${SRV_LISTEN_ADDR} 
      DB_USER: ${DB_USER} 
      DB_PASSWORD: ${DB_PASSWORD} 
      DB_IP: ${DB_IP} 
      DB_PORT: ${DB_PORT} 
      DB_NAME: ${DB_NAME}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - media:/app/media

  db:
    image: postgres:17
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      retries: 5
      timeout: 3s

volumes:
  postgres_data:
  media:

networks:
  app-network:
